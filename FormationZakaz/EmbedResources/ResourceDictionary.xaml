<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <LinearGradientBrush x:Key="WindowBackgroundBrush">
        <GradientStop Offset="0.00" Color="#FF87A0DE"/>
        <GradientStop Offset="0.50" Color="Azure"/>
        <GradientStop Offset="1.00" Color="#FF009CFF"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabBackgroundBrush">
        <GradientStop Offset="0.00" Color="#FF87CEEB"/>
        <GradientStop Offset="0.50" Color="#FF87CEFA"/>
        <GradientStop Offset="1.00" Color="#FF00BFFF"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ItemsTabBackgroundBrush">
        <GradientStop Offset="0.00" Color="#EFFFFF"/>
        <GradientStop Offset="0.50" Color="#EFFFFF"/>
        <GradientStop Offset="1.00" Color="#EFFFFF"/>
    </LinearGradientBrush>
    <!--Стиль пользовательского контрола-->
    <Style  TargetType="UserControl"  x:Key="user">
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}" />
        <!--<Setter Property="Opacity"  Value="0.9"/>-->
        <!--<Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="FontSize" Value="13"/>-->
    </Style>
    <!--Стиль tabcontrola контрола old FFD3DDEF-->
    <Style  TargetType="TabControl"  x:Key="TabC">
        <Setter Property="Background" Value="{StaticResource TabBackgroundBrush}" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Border x:Name="Border"
                                Margin="0,0,0,0"
                                BorderBrush="Gainsboro"
                                BorderThickness="1,1,1,0"
                                CornerRadius="5,5,0,0"
                                Padding="6,2,6,2">
                                    <ContentPresenter x:Name="ContentSite" ContentSource="Header" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="Red" />
                                        <Setter TargetName="Border" Property="Background" Value="White" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="Black" />
                                        <Setter TargetName="Border" Property="Background" Value="#FFD3DDEF" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="Opacity"  Value="0.9"/>-->
        <!--<Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="FontSize" Value="13"/>-->
    </Style>
    <Style TargetType="TabItem" x:Key="TabI">
        <Setter Property="Background" Value="{StaticResource ItemsTabBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True" >
                            <Setter  TargetName="Bd" Property="Background" Value="{StaticResource ItemsTabBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Стиль окна-->
    <Style  TargetType="Window" x:Key="wind">
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}" />
        <!--<Setter Property="Opacity"  Value="0.9"/>-->
        <!--<Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="FontSize" Value="13"/>-->
    </Style>
    <!--Стиль для выравнивания вправо-->
    <Style x:Key="dec">
        <Setter Property="TextBlock.TextAlignment" Value="Right" />
        <!--<Setter Property="TextBlock.Background" Value="Red"/>-->
    </Style>

    <!--<local:AgeToColorConverter x:Key="AgeToColorConverter"/>
    <local:AgeToColorConverter1 x:Key="AgeToColorConverter1"/>-->
    <!--Стиль строки грида с раскрасской-->
    <!--<Style TargetType="{x:Type DataGridRow}" x:Key="RowColor">
        <Setter Property="Background" Value="{Binding priost, Converter={StaticResource AgeToColorConverter}}" />
        <Setter Property="Foreground" Value="{Binding nar,Converter={StaticResource AgeToColorConverter1}}"/>
    </Style>-->

    <!--<local:PriToColorConverter x:Key="PriToColorConverter"/>-->

    <!--Стиль строки грида с раскрасской-->
    <!--<Style TargetType="{x:Type DataGridRow}" x:Key="PriColor">
        <Setter Property="Background" Value="{Binding color, Converter={StaticResource PriToColorConverter}}" />
        
    </Style>-->
    <!--Стиль DataGrid-->
    <Style TargetType="DataGrid">
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#ccc"/>
        <Setter Property="VerticalGridLinesBrush" Value="#ccc"/>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#316AC5"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Стиль заголовка DataGrid-->
    <Style  TargetType= "DataGridColumnHeader">
        <Setter Property="Foreground" Value="#000000" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="12" />
        <!--  <Setter Property="FontWeight" Value="Bold" /> -->
        <Setter Property="BorderBrush" Value="#719EEA"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="Background">

            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Offset="0.00" Color="#FF07A0FF"/>
                    <GradientStop Offset="0.50" Color="Azure"/>
                    <GradientStop Offset="1.00" Color="#FF07A0FF"/>
                    <!--        <GradientStop Color="#FFC2D6F6" Offset="0" />
                    <GradientStop Color="White" Offset="1" />  -->
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="MinHeight" Value="25" />
        <Style.Triggers>
            <Trigger Property="SortDirection" Value="{x:Null}">
                <!--<Setter Property="FontWeight" Value="Bold"/>-->
                <!--<Setter Property="Foreground" Value="White" />-->
                <!--<Setter Property="BorderBrush"  Value="Transparent" />-->
            </Trigger>

            <Trigger Property="SortDirection" Value="Ascending">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="Red" />
                <!--<Setter Property="Background" Value="{StaticResource DataGridHeaderSortedBackgroundBrush}" />-->
            </Trigger>
            <Trigger Property="SortDirection" Value="Descending">
                <!--<Setter Property="Foreground" Value="White" />-->
                <!--<Setter Property="Background" Value="{StaticResource DataGridHeaderSortedBackgroundBrush}" />-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" x:Key="ButtonBrush">
        <GradientStop Offset="0.00" Color="#FF87A0DE"/>
        <GradientStop Offset="0.50" Color="Azure"/>
        <GradientStop Offset="1.00" Color="#FF009CFF"/>
    </LinearGradientBrush>
    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" x:Key="ButtonHoverBrush">
        <GradientStop Offset="0.00" Color="#FF6660DE"/>
        <GradientStop Offset="0.50" Color="Azure"/>
        <GradientStop Offset="1.00" Color="#FF009CFF"/>
    </LinearGradientBrush>



    <SolidColorBrush x:Key="ButtonOpacityBrush" Color="#99000000" />
    <SolidColorBrush x:Key="ButtonTextBrush" Color="Black" />
    <SolidColorBrush x:Key="ButtonBorderBrush" Color="#999" />
    <!--Стиль Кнопки-->
    <Style TargetType="Button">
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonTextBrush}" />
        <Setter Property="Background" Value="{StaticResource ButtonBrush}" />
        <Setter Property="Padding" Value="3"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="btnFace"
                            CornerRadius="3" Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Name="btnContent" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="False" >
                            <Setter TargetName="btnFace" Property="OpacityMask" Value="{StaticResource ButtonOpacityBrush}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter TargetName="btnFace" Property="Background" Value="{StaticResource ButtonHoverBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderTransform" TargetName="btnContent">
                                <Setter.Value>
                                    <TranslateTransform X="0.5" Y="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль для графиков-->
    <!--<Style x:Key="MyColumnDataPointStyle"
         TargetType="{x:Type chartingToolkit:ColumnDataPoint}">
        <Setter Property="Background"
            Value="IndianRed" />
        <Setter Property="BorderBrush"
            Value="Black" />
        <Setter Property="BorderThickness"
            Value="1" />
        <Setter Property="IsTabStop"
            Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chartingToolkit:ColumnDataPoint}">

                    <Border x:Name="Root"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.ToolTip>
                            <ContentControl Content="{TemplateBinding FormattedDependentValue}" />
                        </Border.ToolTip>
                        <Grid Background="{TemplateBinding Background}">
                            <Rectangle>
                                <Rectangle.Fill>
                                    <LinearGradientBrush>
                                        <GradientStop Color="#77FFFFFF"
                                  Offset="0" />
                                        <GradientStop Color="Transparent"
                                  Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>

                            </Rectangle>
                            <Border BorderBrush="#CCFFFFFF"
                      BorderThickness="1">
                                <Border BorderBrush="#77FFFFFF"
                        BorderThickness="1" />
                            </Border>
                            <Rectangle x:Name="SelectionHighlight"
                         Fill= "Red"
                         Opacity="0" />
                            <Rectangle x:Name="MouseOverHighlight"
                         Fill="White"
                         Opacity="0" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--Стиль для WPFMessageBox-->
    <!--<Style TargetType="{x:Type msgbox:WPFMessageBoxControl}">
        <Setter Property="Width" Value="400"/>


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type msgbox:WPFMessageBoxControl}">
                    <Grid Background="{StaticResource WindowBackgroundBrush}" FlowDirection="{Binding ContentFlowDirection}" >
                        <Grid.RowDefinitions>
                          
                            <RowDefinition Height="2" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="40" />
                            
                        </Grid.RowDefinitions>
                        

                        <TextBlock Text="{Binding Message}" Grid.Row="1"  TextWrapping="Wrap" TextAlignment="Left" HorizontalAlignment="{Binding ContentTextAlignment}" VerticalAlignment="Top" Margin="10 10 10 10" Foreground="Purple" FontSize="11" FontWeight="Bold" />

                        <Border Grid.Row="2"  Background="{StaticResource WindowBackgroundBrush}" >
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom"  HorizontalAlignment="Right" Margin="0 0 5 0" >
                                <Button Content="Да" Visibility="{Binding YesNoVisibility}" Command="{Binding YesCommand}" IsDefault="{Binding IsYesDefault}" Margin="5 5 5 5" Height="24" Width="80" />
                                <Button Content="Нет" Visibility="{Binding YesNoVisibility}" Command="{Binding NoCommand}" IsDefault="{Binding IsNoDefault}" Margin="5 5 5 5" Height="24" Width="80" />
                                <Button Content="OK" Visibility="{Binding OkVisibility}" Command="{Binding OkCommand}" IsDefault="{Binding IsOkDefault}" Margin="5 5 5 5" Height="24" Width="80" />
                                <Button Content="Cancel" Visibility="{Binding CancelVisibility}" Command="{Binding CancelCommand}" IsDefault="{Binding IsCancelDefault}" Margin="5 5 5 5" Height="24" Width="80" />
                            </StackPanel>
                        </Border>

                       
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--ScrollBar-->
    <SolidColorBrush x:Key="NormalBrushScrollBar" Color="#22AAFF"/>
    <SolidColorBrush x:Key="HoverBrushScrollBar" Color="#22AAFF"/>
    <SolidColorBrush x:Key="DisabledBrushScrollBar" Color="#22AAFF"/>

    <!--<GradientStop Offset="0.00" Color="#FF87A0DE"/>
    <GradientStop Offset="0.50" Color="Azure"/>
    <GradientStop Offset="1.00" Color="#FF009CFF"/>-->

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridScrollBar" Width="16">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="16"/>
                            <RowDefinition/>
                            <RowDefinition MaxHeight="16"/>
                        </Grid.RowDefinitions>
                        <RepeatButton x:Name="PageUpButton" Grid.Row="0" Command="ScrollBar.LineUpCommand" Style="{DynamicResource RepeatButtonArrowScrollBar}"/>
                        <Track x:Name="PART_Track" Grid.Row="1" Orientation="Vertical" IsDirectionReversed="True">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ThumbScrollBar}"/>
                            </Track.Thumb>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="DecreaseRepeatButton" Command="ScrollBar.PageUpCommand" Style="{DynamicResource RepeatButtonPageScrollBar}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="IncreaseRepeatButton" Command="ScrollBar.PageDownCommand" Style="{DynamicResource RepeatButtonPageScrollBar}"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <RepeatButton x:Name="PageDownButton" Grid.Row="2" Command="ScrollBar.LineDownCommand" Style="{DynamicResource RepeatButtonArrowScrollBar}">
                            <RepeatButton.LayoutTransform>
                                <RotateTransform Angle="180"/>
                            </RepeatButton.LayoutTransform>
                        </RepeatButton>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="LayoutTransform" TargetName="GridScrollBar">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>
                            <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeatButton"/>
                            <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeatButton"/>
                            <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageDownButton"/>
                            <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageUpButton"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonArrowScrollBar" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Height" Value="16"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border Background="Transparent"/>
                        <Path x:Name="RepeatButtonArrow" Fill="{StaticResource NormalBrushScrollBar}" Data="M 2 14 L 14 14 L 8 2 Z"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" 
                                          Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource HoverBrushScrollBar}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="#3162C5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource DisabledBrushScrollBar}"/>
                            <Setter TargetName="RepeatButtonArrow" Property="Opacity" Value="0.72"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThumbScrollBar" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rect_thumb" RadiusX="5" RadiusY="5" Fill="{StaticResource NormalBrushScrollBar}" MaxWidth="10"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="rect_thumb" Property="Fill" Value="{StaticResource HoverBrushScrollBar}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="rect_thumb" Property="Fill" Value="{StaticResource DisabledBrushScrollBar}"/>
                            <Setter TargetName="rect_thumb" Property="Opacity" Value="0.72"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonPageScrollBar" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="#FFF0F8FF"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--COMBOBOX-->
    <SolidColorBrush x:Key="BorderBrushComboBox" Color="Black" />
    <!--фон текстбокса-->
    <LinearGradientBrush x:Key="BackgroundBrushComboBox" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Offset="0.00" Color="#FFFFFFFF"/>
        <GradientStop Offset="0.50" Color="#FFFFFFFF"/>
        <GradientStop Offset="1.00" Color="#FFFFFFFF"/>
        <!--<GradientStop Color="#727272" Offset="0"/>
        <GradientStop Color="#4c4c4c" Offset="1"/>-->
    </LinearGradientBrush>
    <!--Фон открывшегося списка-->
    <LinearGradientBrush x:Key="BackgroundBrushPopUpComboBox" EndPoint="0,1" StartPoint="0,0">
        <!--<GradientStop Offset="0.00" Color="#FF87A0DE"/>
        <GradientStop Offset="0.50" Color="Azure"/>
        <GradientStop Offset="1.00" Color="#FF009CFF"/>-->
        <GradientStop Offset="0.00" Color="#FEFFFF"/>
        <GradientStop Offset="0.50" Color="#FEFFFF"/>
        <GradientStop Offset="1.00" Color="#FEFFFF"/>
        <!--<GradientStop Color="#727272" Offset="1"/>
        <GradientStop Color="#4c4c4c" Offset="0"/>-->
    </LinearGradientBrush>
    <!--Стрелка на кнопке-->
    <!--<SolidColorBrush x:Key="ArrowBrushComboBox" Color="#ddd" />-->
    <SolidColorBrush x:Key="ArrowBrushComboBox" Color="Black" />
    <!--Бордюр комбо-->
    <!--<SolidColorBrush x:Key="DisabledBorderBrushComboBox" Color="#FF919191" />-->
    <SolidColorBrush x:Key="DisabledBorderBrushComboBox" Color="Black" />
    <!--Неактивный комбо-->
    <LinearGradientBrush x:Key="DisabledBackgroundComboBox" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Offset="0.00" Color="#FF87A0DE"/>
        <GradientStop Offset="0.50" Color="Azure"/>
        <GradientStop Offset="1.00" Color="#FF009CFF"/>
        <!--<GradientStop Color="#f4f4f4" Offset="0"/>
        <GradientStop Color="#d7d7d7" Offset="0.7"/>
        <GradientStop Color="#c2c2c2" Offset="1"/>-->
    </LinearGradientBrush>
    <!--неактивный текст-->
    <!--<SolidColorBrush x:Key="DisabledForegroundComboBox" Color="#aaaaaa" />-->
    <SolidColorBrush x:Key="DisabledForegroundComboBox" Color="Black" />
    <!--рамка выбранного комбо-->
    <!--<SolidColorBrush x:Key="HoverBorderBrush" Color="#aaa" />-->
    <SolidColorBrush x:Key="HoverBorderBrush" Color="Black" />

    <!--???-->
    <LinearGradientBrush x:Key="HoverBackground" EndPoint="0,1" StartPoint="0,0">
        <!--<GradientStop Offset="0.00" Color="#FF87A0DE"/>
        <GradientStop Offset="0.50" Color="Azure"/>
        <GradientStop Offset="1.00" Color="#FF009CFF"/>-->
        <!--<GradientStop Offset="0.00" Color="#FFFFFFFF"/>
        <GradientStop Offset="0.50" Color="#FFFFFFFF"/>
        <GradientStop Offset="1.00" Color="#FFFFFFFF"/>-->
        <GradientStop Color="#da5e69" Offset="0"/>
        <GradientStop Color="#d12e27" Offset="1"/>
    </LinearGradientBrush>
    <!--цвет кнопки-->
    <LinearGradientBrush x:Key="HoverToggleBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Offset="0.00" Color="#FF87A0DE"/>
        <GradientStop Offset="0.50" Color="Azure"/>
        <GradientStop Offset="1.00" Color="#FF009CFF"/>
        <!--<GradientStop Color="#676767" Offset="0"></GradientStop>
        <GradientStop Color="#474747" Offset="1"></GradientStop>-->
    </LinearGradientBrush>
    <!--Селектор-->
    <LinearGradientBrush x:Key="HoverItemComboBox" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Offset="0.00" Color="#BBE9FF"/>
        <GradientStop Offset="0.50" Color="#C5D8F1"/>
        <GradientStop Offset="1.00" Color="#BBE9FF"/>
        <!--<GradientStop Offset="0.00" Color="#FFFFFFFF"/>
        <GradientStop Offset="0.50" Color="#FFFFFFFF"/>
        <GradientStop Offset="1.00" Color="#FFFFFFFF"/>-->
        <!--<GradientStop Color="#999" Offset="0"></GradientStop>
        <GradientStop Color="#666" Offset="1"></GradientStop>-->
    </LinearGradientBrush>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="16" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5" Background="{StaticResource HoverToggleBackground}" 
                    BorderBrush="{StaticResource BorderBrushComboBox}" BorderThickness="1" />
            <Border x:Name="BorderToggle" Grid.Column="0" CornerRadius="3,0,0,3" Background="{StaticResource BackgroundBrushComboBox}"
                    BorderBrush="{StaticResource BorderBrushComboBox}" Margin="1" BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource ArrowBrushComboBox}" HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M -2 0 L 2 4 L 6 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverToggleBackground}" />
                <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundComboBox}" />
                <Setter TargetName="BorderToggle" Property="Background" Value="{StaticResource DisabledBackgroundComboBox}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrushComboBox}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundComboBox}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledBorderBrushComboBox}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="Black"/>
        <!--<Setter Property="Foreground" Value="#ddd"/>-->
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="6,3,23,3" VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" Margin="6,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False"
                               PopupAnimation="Slide" Margin="3,-8,-3,8">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{StaticResource BackgroundBrushPopUpComboBox}" BorderThickness="1,1,1,1" CornerRadius="3" Margin="0,3,0,3"
                                        BorderBrush="{StaticResource BorderBrushComboBox}"/>
                                <!--***Scroll***-->
                                <ScrollViewer Margin="0,3" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundComboBox}"/>
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundComboBox}"/>
                            <Setter Property="Opacity" Value="0.72"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!-- ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Border" Padding="2" BorderThickness="1" SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverItemComboBox}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundComboBox}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>